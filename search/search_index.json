{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"gpio-web-server The Python CGI Script to Control the LED. Please visit KeitetsuWorks/raspi-gpio-web-server .","title":"Home"},{"location":"#gpio-web-server","text":"The Python CGI Script to Control the LED. Please visit KeitetsuWorks/raspi-gpio-web-server .","title":"gpio-web-server"},{"location":"LED/","text":"Bases: object LED control class __init__ ( pin , off_state = 1 , default_off = True ) Constructor Parameters: Name Type Description Default pin int GPIO Pin number where LED is connected. required off_state int Output value when LED is OFF. 0 or 1. 1 default_off bool True if the default LED state is OFF. True cleanup () End LED control End control of LED control and release GPIO pin. off () Turn off the LED on () Turn on the LED","title":"LED"},{"location":"LED/#led.led.LED.__init__","text":"Constructor Parameters: Name Type Description Default pin int GPIO Pin number where LED is connected. required off_state int Output value when LED is OFF. 0 or 1. 1 default_off bool True if the default LED state is OFF. True","title":"__init__()"},{"location":"LED/#led.led.LED.cleanup","text":"End LED control End control of LED control and release GPIO pin.","title":"cleanup()"},{"location":"LED/#led.led.LED.off","text":"Turn off the LED","title":"off()"},{"location":"LED/#led.led.LED.on","text":"Turn on the LED","title":"on()"},{"location":"LEDState/","text":"Bases: Enum LED state class","title":"LEDState"},{"location":"gpio-web-server/","text":"CGI Script to Control LEDs Handler Bases: http . server . CGIHTTPRequestHandler Customized CGIHTTPRequestHandler do_GET () Customized do_GET method Customized do_GET method to ignore requests to favicon. do_POST () Customized do_POST method Customized do_POST method to provide LED control API. LEDCtrlThread Bases: threading . Thread LED control thread class __init__ ( leds ) Constructor Parameters: Name Type Description Default leds dict LED objects dictionary required _process_led_ctrl_req ( req ) Process LED control request Parameters: Name Type Description Default req cgi . FieldStorage LED control request. required Returns: Type Description bool True if successful, False otherwise. run () Run the LED control thread Process LED control requests stored in led_ctrl_req_queue . When the LED reaches the blinking timing, the state of the LED is toggled. StoppableThreadingHTTPServer Bases: http . server . ThreadingHTTPServer ThreadingHTTPServer that can be stopped by KeyboardInterrupt run () Run the server main ( args ) Main function Parameters: Name Type Description Default args argparse . Namespace An object holding attributes. required parse_args () Convert argument strings to objects Returns: Type Description argparse . Namespace An object holding attributes.","title":"gpio-web-server"},{"location":"gpio-web-server/#gpio-web-server.Handler","text":"Bases: http . server . CGIHTTPRequestHandler Customized CGIHTTPRequestHandler","title":"Handler"},{"location":"gpio-web-server/#gpio-web-server.Handler.do_GET","text":"Customized do_GET method Customized do_GET method to ignore requests to favicon.","title":"do_GET()"},{"location":"gpio-web-server/#gpio-web-server.Handler.do_POST","text":"Customized do_POST method Customized do_POST method to provide LED control API.","title":"do_POST()"},{"location":"gpio-web-server/#gpio-web-server.LEDCtrlThread","text":"Bases: threading . Thread LED control thread class","title":"LEDCtrlThread"},{"location":"gpio-web-server/#gpio-web-server.LEDCtrlThread.__init__","text":"Constructor Parameters: Name Type Description Default leds dict LED objects dictionary required","title":"__init__()"},{"location":"gpio-web-server/#gpio-web-server.LEDCtrlThread._process_led_ctrl_req","text":"Process LED control request Parameters: Name Type Description Default req cgi . FieldStorage LED control request. required Returns: Type Description bool True if successful, False otherwise.","title":"_process_led_ctrl_req()"},{"location":"gpio-web-server/#gpio-web-server.LEDCtrlThread.run","text":"Run the LED control thread Process LED control requests stored in led_ctrl_req_queue . When the LED reaches the blinking timing, the state of the LED is toggled.","title":"run()"},{"location":"gpio-web-server/#gpio-web-server.StoppableThreadingHTTPServer","text":"Bases: http . server . ThreadingHTTPServer ThreadingHTTPServer that can be stopped by KeyboardInterrupt","title":"StoppableThreadingHTTPServer"},{"location":"gpio-web-server/#gpio-web-server.StoppableThreadingHTTPServer.run","text":"Run the server","title":"run()"},{"location":"gpio-web-server/#gpio-web-server.main","text":"Main function Parameters: Name Type Description Default args argparse . Namespace An object holding attributes. required","title":"main()"},{"location":"gpio-web-server/#gpio-web-server.parse_args","text":"Convert argument strings to objects Returns: Type Description argparse . Namespace An object holding attributes.","title":"parse_args()"}]}